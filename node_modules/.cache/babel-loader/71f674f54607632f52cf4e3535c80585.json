{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/farhadbahrehmand/Desktop/AD/vulnerable-app-front/src/components/contents/sql-injection/Sql-injection.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport SqlInjectionForm from './sql-injection-form/Sql-injection-form';\nimport Hacker from '../../hacker/Hacker.js';\nimport hackerIcon from '../../../assets/hacker.png';\nimport './Sql-injection.css';\n\nclass SqlInjection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hackerStatus: false,\n      result: ''\n    };\n  }\n\n  handleHackerButtonClick() {\n    this.setState({\n      hackerStatus: !this.state.hackerStatus\n    });\n  }\n\n  handleFetchedResult({\n    result\n  }) {\n    this.setState({\n      result\n    });\n  }\n\n  render() {\n    var classes = ['sql-injection-container', this.props.isActive ? 'active' : ''];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _.join(classes, ' '),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sql-injection-hacker-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sql-injection-hacker\",\n          onClick: () => this.handleHackerButtonClick(),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: hackerIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sql-injection-demonstration\",\n        children: [/*#__PURE__*/_jsxDEV(Hacker, {\n          isActive: this.state.hackerStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sql-injection-forms\",\n          children: [/*#__PURE__*/_jsxDEV(SqlInjectionForm, {\n            type: \"bad\",\n            handleFetch: ({\n              result\n            }) => this.handleFetchedResult({\n              result\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SqlInjectionForm, {\n            type: \"good\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sql-injection-result-conteiner\",\n          children: [this.state.result.type && this.state.result.type === 'error' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.result.res\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"res\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SqlInjection;","map":{"version":3,"sources":["/Users/farhadbahrehmand/Desktop/AD/vulnerable-app-front/src/components/contents/sql-injection/Sql-injection.js"],"names":["React","Component","_","SqlInjectionForm","Hacker","hackerIcon","SqlInjection","state","hackerStatus","result","handleHackerButtonClick","setState","handleFetchedResult","render","classes","props","isActive","join","type","res"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAO,qBAAP;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCM,KADmC,GAC3B;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD2B;AAAA;;AAMnCC,EAAAA,uBAAuB,GAAG;AACxB,SAAKC,QAAL,CAAc;AAACH,MAAAA,YAAY,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3B,KAAd;AACD;;AAEDI,EAAAA,mBAAmB,CAAC;AAACH,IAAAA;AAAD,GAAD,EAAW;AAC5B,SAAKE,QAAL,CAAc;AAACF,MAAAA;AAAD,KAAd;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,CAAC,yBAAD,EAA4B,KAAKC,KAAL,CAAWC,QAAX,GAAsB,QAAtB,GAAiC,EAA7D,CAAd;AAEA,wBACE;AAAK,MAAA,SAAS,EAAEd,CAAC,CAACe,IAAF,CAAOH,OAAP,EAAgB,GAAhB,CAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAsC,UAAA,OAAO,EAAE,MAAM,KAAKJ,uBAAL,EAArD;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEL;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE,QAAC,gBAAD;AAAkB,YAAA,IAAI,EAAC,KAAvB;AAA6B,YAAA,WAAW,EAAE,CAAC;AAACC,cAAAA;AAAD,aAAD,KAAc,KAAKG,mBAAL,CAAyB;AAACH,cAAAA;AAAD,aAAzB;AAAxD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,gBAAD;AAAkB,YAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,qBACG,KAAKF,KAAL,CAAWE,MAAX,CAAkBS,IAAlB,IAA0B,KAAKX,KAAL,CAAWE,MAAX,CAAkBS,IAAlB,KAA2B,OAArD,gBACC;AAAA,sBAAM,KAAKX,KAAL,CAAWE,MAAX,CAAkBU;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADD,gBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAKE;AAAA,sBAAM,KAAKZ,KAAL,CAAWE;AAAjB;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAxCkC;;AA2CrC,eAAeH,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport _ from 'lodash';\nimport SqlInjectionForm from './sql-injection-form/Sql-injection-form';\nimport Hacker from '../../hacker/Hacker.js';\nimport hackerIcon from '../../../assets/hacker.png';\nimport './Sql-injection.css';\n\nclass SqlInjection extends Component {\n  state = {\n    hackerStatus: false,\n    result: ''\n  }\n\n  handleHackerButtonClick() {\n    this.setState({hackerStatus: !this.state.hackerStatus});\n  }\n\n  handleFetchedResult({result}) {\n    this.setState({result});\n  }\n\n  render() {\n    var classes = ['sql-injection-container', this.props.isActive ? 'active' : ''];\n\n    return (\n      <div className={_.join(classes, ' ')}>\n        <div className='sql-injection-hacker-button-container'>\n          <div className='sql-injection-hacker' onClick={() => this.handleHackerButtonClick()}>\n            <img src={hackerIcon}></img>\n          </div>\n        </div>\n        <div className='sql-injection-demonstration'>\n          <Hacker isActive={this.state.hackerStatus}/>\n          <div className='sql-injection-forms'>\n            <SqlInjectionForm type='bad' handleFetch={({result}) => this.handleFetchedResult({result})}/>\n            <SqlInjectionForm type='good'/>\n          </div>\n          <div className='sql-injection-result-conteiner'>\n            {this.state.result.type && this.state.result.type === 'error' ? \n              <div>{this.state.result.res}</div> :\n              <div>res</div>\n            }\n            <div>{this.state.result}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SqlInjection;"]},"metadata":{},"sourceType":"module"}